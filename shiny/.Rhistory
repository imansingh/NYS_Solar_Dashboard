"Total.Nameplate.kW.DC", "Expected.KWh.Annual.Production", "Remote.Net.Metering", "Affordable.Solar", "Community.Distributed.Generation", "Green.Jobs.Green.New.York.Participant", "County", "Contractor")
bar_plot_variables = c("Sector", "Program.Type", "Electric.Utility", "Purchase.Type", "Project.Status", "Remote.Net.Metering", "Affordable.Solar", "Community.Distributed.Generation", "Green.Jobs.Green.New.York.Participant", "County", "Contractor")
counties = map_data("county")
nyCounties = filter(counties, region == 'new york')
mapG = ggplot(data = nyCounties, aes(x = long, y = lat))
blankTheme = theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="bottom",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
counties_filled = mapG + blankTheme + geom_polygon(aes(group = group, fill=group))
counties_no_fill = mapG + blankTheme + geom_polygon(aes(group = group), color = 'black',fill=NA)
all_points = counties_no_fill + geom_point(data = solar, aes(x = Longitude, y = Latitude))
densityMap = counties_no_fill + stat_density_2d(aes(fill=..level..),geom ='polygon', alpha=.4)
View(solar)
max(solar$Date.Application.Received, na.rm = TRUE)
max(solar$Days.To.Complete, na.rm = TRUE)
filter(solar, Project.Status == 'Complete' | Project.Status == 'Pipeline')
min(solar$Days.To.Complete,
na.rm = TRUE)
max = max(solar$Days.To.Complete,
na.rm = TRUE)
max
runApp('Documents/NYC Data Science Academy/Project_1_Shiny/NYS Solar App')
runApp('Documents/NYC Data Science Academy/Project_1_Shiny/NYS Solar App')
min(solar$Days.To.Complete,
na.rm = TRUE)
runApp('Documents/NYC Data Science Academy/Project_1_Shiny/NYS Solar App')
min(solar$Days.To.Complete,
na.rm = TRUE)
runApp('Documents/NYC Data Science Academy/Project_1_Shiny/NYS Solar App')
runApp('Documents/NYC Data Science Academy/Project_1_Shiny/NYS Solar App')
solar <- read.csv(file = "solar.csv")
solar <- read.csv(file = "solar.csv")
solar$Reporting.Period <- as.Date(solar$Reporting.Period)
solar$Date.Application.Received <- as.Date(solar$Date.Application.Received)
solar$Date.Completed <- as.Date(solar$Date.Completed)
print(max(solar$Days.To.Complete,na.rm = TRUE))
solar <- read.csv(file = "solar.csv")
solar$Reporting.Period <- as.Date(solar$Reporting.Period)
solar$Date.Application.Received <- as.Date(solar$Date.Application.Received)
solar$Date.Completed <- as.Date(solar$Date.Completed)
print(max(solar$Days.To.Complete,na.rm = TRUE))
runApp('Documents/NYC Data Science Academy/Project_1_Shiny/NYS Solar App')
solar <- read.csv(file = "solar.csv")
solar$Reporting.Period <- as.Date(solar$Reporting.Period)
solar$Date.Application.Received <- as.Date(solar$Date.Application.Received)
solar$Date.Completed <- as.Date(solar$Date.Completed)
print(max(solar$Days.To.Complete,na.rm = TRUE))
print(solar$Date.Application.Received)
runApp('Documents/NYC Data Science Academy/Project_1_Shiny/NYS Solar App')
solar <- read.csv(file = "solar.csv")
solar$Reporting.Period <- as.Date(solar$Reporting.Period)
solar$Date.Application.Received <- as.Date(solar$Date.Application.Received)
solar$Date.Completed <- as.Date(solar$Date.Completed)
print(solar$Date.Application.Received)
print(solar$Date.Completed)
View(solar_raw)
solar_raw$`Date Application Received`
as.Date(solar_raw$`Date Application Received`, "%m/%d/%y")
summary(solar_raw)
summary(solar)
head('solar.csv')
solar <- read.csv(file = "solar.csv")
summary(solar)
solar = solar_raw
solar[23177,30] = "Three Mile Bay, NY 13693\r(44.0814, -76.1983)"
solar$`Reporting Period` = as.Date(solar$`Reporting Period`, "%m/%d/%y")
solar = rename(solar, Incentive = `$Incentive`)
solar$'Incentive' <- as.numeric(gsub('\\$|,', '', solar$'Incentive'))
solar$'Project Cost' <- as.numeric(gsub('\\$|,', '', solar$'Project Cost'))
solar = separate(solar, 'Location 1', into = c('Location', 'Coordinates'), sep="\\(")
solar$'Project Cost' <- as.numeric(gsub('\\$|,', '', solar$'Project Cost'))
solar$Coordinates <- gsub('\\)', '', solar$Coordinates)
solar$Coordinates <- gsub(', ', ':', solar$Coordinates)
solar = separate(solar, 'Coordinates', into = c('Latitude', 'Longitude'), sep=":", remove = FALSE)
solar$Latitude = as.numeric(solar$Latitude)
solar$Longitude = as.numeric(solar$Longitude)
solar = solar %>%
rename(
Reporting.Period = `Reporting Period`,
Project.Number = `Project Number`,
Zip.Code = `Zip Code`,
Program.Type = `Program Type`,
Electric.Utility = `Electric Utility`,
Purchase.Type = `Purchase Type`,
Date.Application.Received = `Date Application Received`,
Date.Completed = `Date Completed`,
Project.Status = `Project Status`,
Total.Inverter.Quantity = `Total Inverter Quantity`,
Primary.Inverter.Model.Number = `Primary Inverter Model Number`,
Total.PV.Module.Quantity = `Total PV Module Quantity`,
PV.Module.Model.Number = `PV Module Model Number`,
Project.Cost = `Project Cost`,
Total.Nameplate.kW.DC = `Total Nameplate kW DC`,
Expected.KWh.Annual.Production = `Expected KWh Annual Production`,
Primary.Inverter.Manufacturer = `Primary Inverter Manufacturer`,
Remote.Net.Metering = `Remote Net Metering`,
Affordable.Solar = `Affordable Solar`,
Community.Distributed.Generation = `Community Distributed Generation`,
Primary.PV.Module.Manufacturer = `Primary PV Module Manufacturer`,
Green.Jobs.Green.New.York.Participant = `Green Jobs Green New York Participant`
)
solar = solar %>%
select(-State, -Location)
solar = solar %>%
mutate(Days.To.Complete = Date.Completed - Date.Application.Received,
Net.Cost = Project.Cost - Incentive,
# Year.Completed = format(Date.Completed, '%Y'),
# Year.Applied=format(Date.Application.Received, '%Y'),
Incentive.Per.Nameplate.kW = Incentive / Total.Nameplate.kW.DC,
Incentive.Per.Annual.KW = Incentive / Expected.KWh.Annual.Production,
Total.Cost.Per.Nameplate.kW = Project.Cost / Total.Nameplate.kW.DC,
Total.Cost.Per.Annual.KW = Project.Cost / Expected.KWh.Annual.Production,
Net.Cost.Per.Nameplate.kW = Net.Cost / Total.Nameplate.kW.DC,
Net.Cost.Per.Annual.KW = Net.Cost / Expected.KWh.Annual.Production)
write.csv(x = solar, file = 'solar.csv')
solar = solar %>%
mutate(
# Days.To.Complete = Date.Completed - Date.Application.Received,
Net.Cost = Project.Cost - Incentive,
# Year.Completed = format(Date.Completed, '%Y'),
# Year.Applied=format(Date.Application.Received, '%Y'),
Incentive.Per.Nameplate.kW = Incentive / Total.Nameplate.kW.DC,
Incentive.Per.Annual.KW = Incentive / Expected.KWh.Annual.Production,
Total.Cost.Per.Nameplate.kW = Project.Cost / Total.Nameplate.kW.DC,
Total.Cost.Per.Annual.KW = Project.Cost / Expected.KWh.Annual.Production,
Net.Cost.Per.Nameplate.kW = Net.Cost / Total.Nameplate.kW.DC,
Net.Cost.Per.Annual.KW = Net.Cost / Expected.KWh.Annual.Production)
write.csv(x = solar, file = 'solar.csv')
solar <- read.csv(file = "solar.csv")
solar$Reporting.Period <- as.Date(solar$Reporting.Period)
solar$Date.Application.Received <- as.Date(solar$Date.Application.Received, "%m/%d/%y")
solar$Date.Completed <- as.Date(solar$Date.Completed, "%m/%d/%y")
solar = solar %>%
mutate(Days.To.Complete = Date.Completed - Date.Application.Received)
print(max(solar$Days.To.Complete,na.rm = TRUE))
solar <- read.csv(file = "solar.csv")
solar$Reporting.Period <- as.Date(solar$Reporting.Period)
solar$Date.Application.Received <- as.Date(solar$Date.Application.Received, "%m/%d/%Y")
solar$Date.Completed <- as.Date(solar$Date.Completed, "%m/%d/%Y")
solar = solar %>%
mutate(Days.To.Complete = Date.Completed - Date.Application.Received)
print(max(solar$Days.To.Complete,na.rm = TRUE))
print(min(solar$Days.To.Complete, na.rm = TRUE))
runApp('Documents/NYC Data Science Academy/Project_1_Shiny/NYS Solar App')
source('~/Documents/NYC Data Science Academy/Project_1_Shiny/NYS Solar App/dataCleaning.R', echo=TRUE)
library(dplyr)
library(tidyr)
solar = Solar_Electric_Programs_Reported_by_NYSERDA_Beginning_2000
solar = solar_raw
solar[23177,30] = "Three Mile Bay, NY 13693\r(44.0814, -76.1983)"
solar$`Reporting Period` = as.Date(solar$`Reporting Period`, "%m/%d/%y")
solar$`Date Application Received` = as.Date(solar$`Date Application Received`, "%m/%d/%Y")
solar$`Date Completed` = as.Date(solar$`Date Completed`, "%m/%d/%Y")
solar = rename(solar, Incentive = `$Incentive`)
solar$'Incentive' <- as.numeric(gsub('\\$|,', '', solar$'Incentive'))
solar$'Project Cost' <- as.numeric(gsub('\\$|,', '', solar$'Project Cost'))
solar = separate(solar, 'Location 1', into = c('Location', 'Coordinates'), sep="\\(")
solar$'Project Cost' <- as.numeric(gsub('\\$|,', '', solar$'Project Cost'))
solar$Coordinates <- gsub('\\)', '', solar$Coordinates)
solar$Coordinates <- gsub(', ', ':', solar$Coordinates)
solar = separate(solar, 'Coordinates', into = c('Latitude', 'Longitude'), sep=":", remove = FALSE)
solar$Latitude = as.numeric(solar$Latitude)
solar$Longitude = as.numeric(solar$Longitude)
solar = solar %>%
rename(
Reporting.Period = `Reporting Period`,
Project.Number = `Project Number`,
Zip.Code = `Zip Code`,
Program.Type = `Program Type`,
Electric.Utility = `Electric Utility`,
Purchase.Type = `Purchase Type`,
Date.Application.Received = `Date Application Received`,
Date.Completed = `Date Completed`,
Project.Status = `Project Status`,
Total.Inverter.Quantity = `Total Inverter Quantity`,
Primary.Inverter.Model.Number = `Primary Inverter Model Number`,
Total.PV.Module.Quantity = `Total PV Module Quantity`,
PV.Module.Model.Number = `PV Module Model Number`,
Project.Cost = `Project Cost`,
Total.Nameplate.kW.DC = `Total Nameplate kW DC`,
Expected.KWh.Annual.Production = `Expected KWh Annual Production`,
Primary.Inverter.Manufacturer = `Primary Inverter Manufacturer`,
Remote.Net.Metering = `Remote Net Metering`,
Affordable.Solar = `Affordable Solar`,
Community.Distributed.Generation = `Community Distributed Generation`,
Primary.PV.Module.Manufacturer = `Primary PV Module Manufacturer`,
Green.Jobs.Green.New.York.Participant = `Green Jobs Green New York Participant`
)
solar = solar %>%
select(-State, -Location)
solar = solar %>%
mutate(
Days.To.Complete = Date.Completed - Date.Application.Received,
Net.Cost = Project.Cost - Incentive,
# Year.Completed = format(Date.Completed, '%Y'),
# Year.Applied=format(Date.Application.Received, '%Y'),
Incentive.Per.Nameplate.kW = Incentive / Total.Nameplate.kW.DC,
Incentive.Per.Annual.KW = Incentive / Expected.KWh.Annual.Production,
Total.Cost.Per.Nameplate.kW = Project.Cost / Total.Nameplate.kW.DC,
Total.Cost.Per.Annual.KW = Project.Cost / Expected.KWh.Annual.Production,
Net.Cost.Per.Nameplate.kW = Net.Cost / Total.Nameplate.kW.DC,
Net.Cost.Per.Annual.KW = Net.Cost / Expected.KWh.Annual.Production)
write.csv(x = solar, file = 'solar.csv')
solar <- read.csv(file = "solar.csv")
solar$Reporting.Period <- as.Date(solar$Reporting.Period)
solar$Date.Application.Received <- as.Date(solar$Date.Application.Received)
solar$Date.Completed <- as.Date(solar$Date.Completed)
print(max(solar$Days.To.Complete, na.rm = TRUE))
print(min(solar$Days.To.Complete, na.rm = TRUE))
runApp('Documents/NYC Data Science Academy/Project_1_Shiny/NYS Solar App')
runApp('Documents/NYC Data Science Academy/Project_1_Shiny/NYS Solar App')
runApp('Documents/NYC Data Science Academy/Project_1_Shiny/NYS Solar App')
runApp('Documents/NYC Data Science Academy/Project_1_Shiny/NYS Solar App')
solar <- read.csv(file = "solar.csv")
solar$Reporting.Period <- as.Date(solar$Reporting.Period)
solar$Date.Application.Received <- as.Date(solar$Date.Application.Received)
solar$Date.Completed <- as.Date(solar$Date.Completed)
print(max(solar$Days.To.Complete, na.rm = TRUE))
print(min(solar$Days.To.Complete, na.rm = TRUE))
choice <- colnames(solar)[-1]
choice_map_scatter = c("Sector", "Program.Type", "Electric.Utility", "Purchase.Type", "Date.Application.Received", "Date.Completed", "Days.To.Complete", "Project.Status", "Total.PV.Module.Quantity", "Project.Cost", "Incentive", "Net.Cost",
"Total.Nameplate.kW.DC", "Expected.KWh.Annual.Production", "Remote.Net.Metering", "Affordable.Solar", "Community.Distributed.Generation", "Green.Jobs.Green.New.York.Participant")
choice_hist_box = c("Sector", "Program.Type", "Electric.Utility", "Purchase.Type", "Date.Application.Received", "Date.Completed", "Days.To.Complete", "Project.Status", "Total.PV.Module.Quantity", "Project.Cost", "Incentive", "Net.Cost",
"Total.Nameplate.kW.DC", "Expected.KWh.Annual.Production", "Remote.Net.Metering", "Affordable.Solar", "Community.Distributed.Generation", "Green.Jobs.Green.New.York.Participant", "County", "Contractor")
bar_plot_variables = c("Sector", "Program.Type", "Electric.Utility", "Purchase.Type", "Project.Status", "Remote.Net.Metering", "Affordable.Solar", "Community.Distributed.Generation", "Green.Jobs.Green.New.York.Participant", "County", "Contractor")
counties = map_data("county")
nyCounties = filter(counties, region == 'new york')
mapG = ggplot(data = nyCounties, aes(x = long, y = lat))
blankTheme = theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="bottom",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
counties_filled = mapG + blankTheme + geom_polygon(aes(group = group, fill=group))
counties_no_fill = mapG + blankTheme + geom_polygon(aes(group = group), color = 'black',fill=NA)
all_points = counties_no_fill + geom_point(data = solar, aes(x = Longitude, y = Latitude))
densityMap = counties_no_fill + stat_density_2d(aes(fill=..level..),geom ='polygon', alpha=.4)
print(max(solar$Days.To.Complete,na.rm = TRUE))
print(mIN(solar$Days.To.Complete,na.rm = TRUE))
print(min(solar$Days.To.Complete,na.rm = TRUE))
runApp('Documents/NYC Data Science Academy/Project_1_Shiny/NYS Solar App')
runApp('Documents/NYC Data Science Academy/Project_1_Shiny/NYS Solar App')
solar <- read.csv(file = "solar.csv")
solar$Reporting.Period <- as.Date(solar$Reporting.Period)
solar$Date.Application.Received <- as.Date(solar$Date.Application.Received)
solar$Date.Completed <- as.Date(solar$Date.Completed)
solar <- fread(file = "solar.csv")
library(data.table)
solar <- fread(file = "solar.csv")
solar <- fread(file = "solar.csv")
solar$Reporting.Period <- as.Date(solar$Reporting.Period)
solar$Date.Application.Received <- as.Date(solar$Date.Application.Received)
solar$Date.Completed <- as.Date(solar$Date.Completed)
print(max(solar$Days.To.Complete, na.rm = TRUE))
print(min(solar$Days.To.Complete, na.rm = TRUE))
print(max(as.numeric(solar$Days.To.Complete, na.rm = TRUE)))
print(max(solar$Days.To.Complete, na.rm = TRUE))
runApp('Documents/GitHub/NYS_Solar_Dashboard/shiny/test')
runApp('Documents/GitHub/NYS_Solar_Dashboard/shiny/test')
runApp('Documents/GitHub/NYS_Solar_Dashboard/shiny/test')
solar <- fread(file = "solar.csv")
solar$Reporting.Period <- as.Date(solar$Reporting.Period)
solar$Date.Application.Received <- as.Date(solar$Date.Application.Received)
solar$Date.Completed <- as.Date(solar$Date.Completed)
print(max(solar$Days.To.Complete, na.rm = TRUE))
print(min(solar$Days.To.Complete, na.rm = TRUE))
as.numeric(solar$Days.To.Complete)
print(min(solar$Days.To.Complete, na.rm = TRUE))
hist(solar$Days.To.Complete)
hist(solar$Days.To.Complete[solar$Days.To.Complete < 0])
runApp('Documents/GitHub/NYS_Solar_Dashboard/shiny/test')
runApp('Documents/GitHub/NYS_Solar_Dashboard/shiny/test')
hist(solar$Days.To.Complete[solar$Days.To.Complete < 0])
hist(solar$Days.To.Complete)
solar = solar_raw
solar[23177,30] = "Three Mile Bay, NY 13693\r(44.0814, -76.1983)"
solar$`Reporting Period` = as.Date(solar$`Reporting Period`, "%m/%d/%y")
solar$`Date Application Received` = as.Date(solar$`Date Application Received`, "%m/%d/%Y")
solar$`Date Completed` = as.Date(solar$`Date Completed`, "%m/%d/%Y")
solar = rename(solar, Incentive = `$Incentive`)
solar$'Incentive' <- as.numeric(gsub('\\$|,', '', solar$'Incentive'))
solar$'Project Cost' <- as.numeric(gsub('\\$|,', '', solar$'Project Cost'))
solar = separate(solar, 'Location 1', into = c('Location', 'Coordinates'), sep="\\(")
solar$'Project Cost' <- as.numeric(gsub('\\$|,', '', solar$'Project Cost'))
solar$Coordinates <- gsub('\\)', '', solar$Coordinates)
solar$Coordinates <- gsub(', ', ':', solar$Coordinates)
solar = separate(solar, 'Coordinates', into = c('Latitude', 'Longitude'), sep=":", remove = FALSE)
solar$Latitude = as.numeric(solar$Latitude)
solar$Longitude = as.numeric(solar$Longitude)
solar = solar %>%
rename(
Reporting.Period = `Reporting Period`,
Project.Number = `Project Number`,
Zip.Code = `Zip Code`,
Program.Type = `Program Type`,
Electric.Utility = `Electric Utility`,
Purchase.Type = `Purchase Type`,
Date.Application.Received = `Date Application Received`,
Date.Completed = `Date Completed`,
Project.Status = `Project Status`,
Total.Inverter.Quantity = `Total Inverter Quantity`,
Primary.Inverter.Model.Number = `Primary Inverter Model Number`,
Total.PV.Module.Quantity = `Total PV Module Quantity`,
PV.Module.Model.Number = `PV Module Model Number`,
Project.Cost = `Project Cost`,
Total.Nameplate.kW.DC = `Total Nameplate kW DC`,
Expected.KWh.Annual.Production = `Expected KWh Annual Production`,
Primary.Inverter.Manufacturer = `Primary Inverter Manufacturer`,
Remote.Net.Metering = `Remote Net Metering`,
Affordable.Solar = `Affordable Solar`,
Community.Distributed.Generation = `Community Distributed Generation`,
Primary.PV.Module.Manufacturer = `Primary PV Module Manufacturer`,
Green.Jobs.Green.New.York.Participant = `Green Jobs Green New York Participant`
)
solar = solar %>%
select(-State, -Location)
solar = solar %>%
mutate(
Days.To.Complete = Date.Completed - Date.Application.Received,
Net.Cost = Project.Cost - Incentive,
# Year.Completed = format(Date.Completed, '%Y'),
# Year.Applied=format(Date.Application.Received, '%Y'),
Incentive.Per.Nameplate.kW = Incentive / Total.Nameplate.kW.DC,
Incentive.Per.Annual.KW = Incentive / Expected.KWh.Annual.Production,
Total.Cost.Per.Nameplate.kW = Project.Cost / Total.Nameplate.kW.DC,
Total.Cost.Per.Annual.KW = Project.Cost / Expected.KWh.Annual.Production,
Net.Cost.Per.Nameplate.kW = Net.Cost / Total.Nameplate.kW.DC,
Net.Cost.Per.Annual.KW = Net.Cost / Expected.KWh.Annual.Production)
write.csv(x = solar, file = 'solar.csv')
summary(solar)
solar = solar_raw
solar[23177,30] = "Three Mile Bay, NY 13693\r(44.0814, -76.1983)"
solar$`Reporting Period` = as.Date(solar$`Reporting Period`, "%m/%d/%y")
solar$`Date Application Received` = as.Date(solar$`Date Application Received`, "%m/%d/%Y")
solar$`Date Completed` = as.Date(solar$`Date Completed`, "%m/%d/%Y")
solar = rename(solar, Incentive = `$Incentive`)
solar$'Incentive' <- as.numeric(gsub('\\$|,', '', solar$'Incentive'))
solar$'Project Cost' <- as.numeric(gsub('\\$|,', '', solar$'Project Cost'))
solar = separate(solar, 'Location 1', into = c('Location', 'Coordinates'), sep="\\(")
solar$'Project Cost' <- as.numeric(gsub('\\$|,', '', solar$'Project Cost'))
solar$Coordinates <- gsub('\\)', '', solar$Coordinates)
solar$Coordinates <- gsub(', ', ':', solar$Coordinates)
solar = separate(solar, 'Coordinates', into = c('Latitude', 'Longitude'), sep=":", remove = FALSE)
solar$Latitude = as.numeric(solar$Latitude)
solar$Longitude = as.numeric(solar$Longitude)
solar = solar %>%
rename(
Reporting.Period = `Reporting Period`,
Project.Number = `Project Number`,
Zip.Code = `Zip Code`,
Program.Type = `Program Type`,
Electric.Utility = `Electric Utility`,
Purchase.Type = `Purchase Type`,
Date.Application.Received = `Date Application Received`,
Date.Completed = `Date Completed`,
Project.Status = `Project Status`,
Total.Inverter.Quantity = `Total Inverter Quantity`,
Primary.Inverter.Model.Number = `Primary Inverter Model Number`,
Total.PV.Module.Quantity = `Total PV Module Quantity`,
PV.Module.Model.Number = `PV Module Model Number`,
Project.Cost = `Project Cost`,
Total.Nameplate.kW.DC = `Total Nameplate kW DC`,
Expected.KWh.Annual.Production = `Expected KWh Annual Production`,
Primary.Inverter.Manufacturer = `Primary Inverter Manufacturer`,
Remote.Net.Metering = `Remote Net Metering`,
Affordable.Solar = `Affordable Solar`,
Community.Distributed.Generation = `Community Distributed Generation`,
Primary.PV.Module.Manufacturer = `Primary PV Module Manufacturer`,
Green.Jobs.Green.New.York.Participant = `Green Jobs Green New York Participant`
)
solar = solar %>%
select(-State, -Location)
solar = solar %>%
mutate(
Days.To.Complete = as.numeric(Date.Completed - Date.Application.Received),
Net.Cost = Project.Cost - Incentive,
# Year.Completed = format(Date.Completed, '%Y'),
# Year.Applied=format(Date.Application.Received, '%Y'),
Incentive.Per.Nameplate.kW = Incentive / Total.Nameplate.kW.DC,
Incentive.Per.Annual.KW = Incentive / Expected.KWh.Annual.Production,
Total.Cost.Per.Nameplate.kW = Project.Cost / Total.Nameplate.kW.DC,
Total.Cost.Per.Annual.KW = Project.Cost / Expected.KWh.Annual.Production,
Net.Cost.Per.Nameplate.kW = Net.Cost / Total.Nameplate.kW.DC,
Net.Cost.Per.Annual.KW = Net.Cost / Expected.KWh.Annual.Production)
write.csv(x = solar, file = 'solar.csv')
summary(solar)
runApp('Documents/NYC Data Science Academy/Project_1_Shiny/NYS Solar App')
solar <- fread(file = "solar.csv")
solar$Reporting.Period <- as.Date(solar$Reporting.Period)
solar$Date.Application.Received <- as.Date(solar$Date.Application.Received)
solar$Date.Completed <- as.Date(solar$Date.Completed)
print(max(solar$Days.To.Complete, na.rm = TRUE))
print(min(solar$Days.To.Complete, na.rm = TRUE))
choice <- colnames(solar)[-1]
choice_map_scatter = c("Sector", "Program.Type", "Electric.Utility", "Purchase.Type", "Date.Application.Received", "Date.Completed", "Days.To.Complete", "Project.Status", "Total.PV.Module.Quantity", "Project.Cost", "Incentive", "Net.Cost",
"Total.Nameplate.kW.DC", "Expected.KWh.Annual.Production", "Remote.Net.Metering", "Affordable.Solar", "Community.Distributed.Generation", "Green.Jobs.Green.New.York.Participant")
choice_hist_box = c("Sector", "Program.Type", "Electric.Utility", "Purchase.Type", "Date.Application.Received", "Date.Completed", "Days.To.Complete", "Project.Status", "Total.PV.Module.Quantity", "Project.Cost", "Incentive", "Net.Cost",
"Total.Nameplate.kW.DC", "Expected.KWh.Annual.Production", "Remote.Net.Metering", "Affordable.Solar", "Community.Distributed.Generation", "Green.Jobs.Green.New.York.Participant", "County", "Contractor")
bar_plot_variables = c("Sector", "Program.Type", "Electric.Utility", "Purchase.Type", "Project.Status", "Remote.Net.Metering", "Affordable.Solar", "Community.Distributed.Generation", "Green.Jobs.Green.New.York.Participant", "County", "Contractor")
counties = map_data("county")
nyCounties = filter(counties, region == 'new york')
mapG = ggplot(data = nyCounties, aes(x = long, y = lat))
blankTheme = theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="bottom",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
counties_filled = mapG + blankTheme + geom_polygon(aes(group = group, fill=group))
counties_no_fill = mapG + blankTheme + geom_polygon(aes(group = group), color = 'black',fill=NA)
all_points = counties_no_fill + geom_point(data = solar, aes(x = Longitude, y = Latitude))
densityMap = counties_no_fill + stat_density_2d(aes(fill=..level..),geom ='polygon', alpha=.4)
print(max(solar$Days.To.Complete,na.rm = TRUE))
print(min(solar$Days.To.Complete,na.rm = TRUE))
solar = solar_raw
solar[23177,30] = "Three Mile Bay, NY 13693\r(44.0814, -76.1983)"
solar$`Reporting Period` = as.Date(solar$`Reporting Period`, "%m/%d/%y")
solar$`Date Application Received` = as.Date(solar$`Date Application Received`, "%m/%d/%Y")
solar$`Date Completed` = as.Date(solar$`Date Completed`, "%m/%d/%Y")
solar = rename(solar, Incentive = `$Incentive`)
solar$'Incentive' <- as.numeric(gsub('\\$|,', '', solar$'Incentive'))
solar$'Project Cost' <- as.numeric(gsub('\\$|,', '', solar$'Project Cost'))
solar = separate(solar, 'Location 1', into = c('Location', 'Coordinates'), sep="\\(")
solar$'Project Cost' <- as.numeric(gsub('\\$|,', '', solar$'Project Cost'))
solar$Coordinates <- gsub('\\)', '', solar$Coordinates)
solar$Coordinates <- gsub(', ', ':', solar$Coordinates)
solar = separate(solar, 'Coordinates', into = c('Latitude', 'Longitude'), sep=":", remove = FALSE)
solar$Latitude = as.numeric(solar$Latitude)
solar$Longitude = as.numeric(solar$Longitude)
solar = solar %>%
rename(
Reporting.Period = `Reporting Period`,
Project.Number = `Project Number`,
Zip.Code = `Zip Code`,
Program.Type = `Program Type`,
Electric.Utility = `Electric Utility`,
Purchase.Type = `Purchase Type`,
Date.Application.Received = `Date Application Received`,
Date.Completed = `Date Completed`,
Project.Status = `Project Status`,
Total.Inverter.Quantity = `Total Inverter Quantity`,
Primary.Inverter.Model.Number = `Primary Inverter Model Number`,
Total.PV.Module.Quantity = `Total PV Module Quantity`,
PV.Module.Model.Number = `PV Module Model Number`,
Project.Cost = `Project Cost`,
Total.Nameplate.kW.DC = `Total Nameplate kW DC`,
Expected.KWh.Annual.Production = `Expected KWh Annual Production`,
Primary.Inverter.Manufacturer = `Primary Inverter Manufacturer`,
Remote.Net.Metering = `Remote Net Metering`,
Affordable.Solar = `Affordable Solar`,
Community.Distributed.Generation = `Community Distributed Generation`,
Primary.PV.Module.Manufacturer = `Primary PV Module Manufacturer`,
Green.Jobs.Green.New.York.Participant = `Green Jobs Green New York Participant`
)
solar = solar %>%
select(-State, -Location)
solar = solar %>%
mutate(
Days.To.Complete = as.numeric(Date.Completed - Date.Application.Received),
Net.Cost = Project.Cost - Incentive,
# Year.Completed = format(Date.Completed, '%Y'),
# Year.Applied=format(Date.Application.Received, '%Y'),
Incentive.Per.Nameplate.kW = Incentive / Total.Nameplate.kW.DC,
Incentive.Per.Annual.KW = Incentive / Expected.KWh.Annual.Production,
Total.Cost.Per.Nameplate.kW = Project.Cost / Total.Nameplate.kW.DC,
Total.Cost.Per.Annual.KW = Project.Cost / Expected.KWh.Annual.Production,
Net.Cost.Per.Nameplate.kW = Net.Cost / Total.Nameplate.kW.DC,
Net.Cost.Per.Annual.KW = Net.Cost / Expected.KWh.Annual.Production)
write.csv(x = solar, file = 'solar.csv')
runApp('Documents/NYC Data Science Academy/Project_1_Shiny/NYS Solar App')
View(solar)
solar <- fread(file = "solar.csv")
solar$Reporting.Period <- as.Date(solar$Reporting.Period)
solar$Date.Application.Received <- as.Date(solar$Date.Application.Received)
solar$Date.Completed <- as.Date(solar$Date.Completed)
print(max(solar$Days.To.Complete, na.rm = TRUE))
print(min(solar$Days.To.Complete, na.rm = TRUE))
sapply(solar, sum(is.na()))
sapply(solar, function(x) sum(is.na(x)))
library(readr)
string_data_wrangled <- read_csv("~/Documents/GitHub/Web_Scraping_String_Rankings/shiny/string_data_wrangled.csv")
View(string_data_wrangled)
sapply(string_data_wrangled, function(x) sum(is.na(x)))
View(solar_raw)
shiny::runApp('Documents/NYC Data Science Academy/Project_1_Shiny/NYS Solar App')
runApp('Documents/NYC Data Science Academy/Project_1_Shiny/NYS Solar App')
solar <- fread(file = "solar.csv")
setwd("~/Documents/GitHub/NYS_Solar_Dashboard/shiny")
solar <- fread(file = "solar.csv")
runApp('~/Documents/NYC Data Science Academy/Project_1_Shiny/NYS Solar App')
